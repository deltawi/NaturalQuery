
CREATE TABLE suppliers (
    supplierid SERIAL PRIMARY KEY, -- supplierid is the unique identifier for a supplier
    suppliername VARCHAR(100), -- supplier name
    contactname VARCHAR(100), -- contact person's name
    address VARCHAR(255), -- supplier's address
    city VARCHAR(50), -- city where the supplier is located
    country VARCHAR(50), -- country where the supplier is located
    phone VARCHAR(15), -- supplier's phone number
    email VARCHAR(100) -- supplier's email address
)

CREATE TABLE products (
    categoryid integer, -- categoryid is the unique identifier for a product category
    unitprice numeric, -- unit price of the product
    stockquantity integer DEFAULT 0, -- initial stock quantity of the product
    supplierid integer, -- supplier ID associated with the product
    productid SERIAL PRIMARY KEY, -- unique identifier for each product
    productname VARCHAR(100), -- product name
    description text -- product description
)

CREATE TABLE categories (
    categoryid SERIAL PRIMARY KEY, -- categoryid is the unique identifier for a category
    categoryname VARCHAR(50), -- category name
    description text -- category description
)

CREATE TABLE customers (
    customerid SERIAL PRIMARY KEY, -- customer ID is the unique identifier for a customer
    registrationdate timestamp with time zone DEFAULT CURRENT_TIMESTAMP, -- registration date of the customer
    lastname VARCHAR(50), -- customer's last name
    email VARCHAR(100), -- customer's email address
    phone VARCHAR(15), -- customer's phone number
    address VARCHAR(255), -- customer's address
    city VARCHAR(50), -- city where the customer is located
    country VARCHAR(50), -- country where the customer is located
    firstname VARCHAR(50) -- customer's first name
)

CREATE TABLE orders (
    orderid SERIAL PRIMARY KEY, -- order ID is the unique identifier for an order
    customerid integer, -- customer ID associated with the order
    orderdate timestamp with time zone DEFAULT CURRENT_TIMESTAMP, -- order date and time
    totalamount numeric, -- total amount of the order
    shippingaddress VARCHAR(255), -- shipping address of the order
    orderstatus VARCHAR(50) DEFAULT 'Processing'::character varying -- order status (e.g. "Processing", "Shipped", "Delivered", etc.)
)

CREATE TABLE orderdetails (
    orderdetailid SERIAL PRIMARY KEY, -- unique identifier for each order detail
    orderid integer, -- order ID associated with the order detail
    productid integer, -- product ID associated with the order detail
    quantity integer, -- quantity of the product in the order
    unitprice numeric, -- unit price of the product in the order
)

CREATE TABLE payments (
    paymentid SERIAL PRIMARY KEY, -- unique identifier for each payment
    orderid integer, -- order ID associated with the payment
    paymentdate timestamp with time zone DEFAULT CURRENT_TIMESTAMP, -- payment date and time
    amount numeric, -- amount of the payment
    paymentmethod VARCHAR(50) -- payment method (e.g. "Credit Card", "PayPal", etc.)
)

CREATE TABLE customerfeedback (
    feedbackid SERIAL PRIMARY KEY, -- unique identifier for each piece of feedback
    customerid integer, -- customer ID associated with the feedback
    productid integer, -- product ID associated with the feedback
    rating integer, -- rating of the product (e.g. 1-5)
    feedbackdate timestamp with time zone DEFAULT CURRENT_TIMESTAMP, -- date and time of the feedback
    comment text -- customer's feedback comment
)

-- products.categoryid can be joined with categories.categoryid
-- products.supplierid can be joined with suppliers.supplierid
-- orders.customerid can be joined with customers.customerid
-- orderdetails.orderid can be joined with orders.orderid
-- orderdetails.productid can be joined with products.productid
-- payments.orderid can be joined with orders.orderid
-- customerfeedback.customerid can be joined with customers.customerid
-- customerfeedback.productid can be joined with products.productid
